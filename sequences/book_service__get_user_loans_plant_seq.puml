@startuml View User Loans Sequence Diagram

title Просмотр полученных книг пользователем

actor "Пользователь" as User
participant "API Gateway" as Gateway
participant "BookingService" as Booking
participant "BookManagementService" as BMS

autonumber
== Запрос списка займов ==
User -> Gateway: GET /api/v1/users/mrmacgood71/loans?status=ACTIVE,RETURNED

Gateway -> Booking: Получить займы пользователя
activate Booking

== Получение списка займов пользователя ==
Booking -> Booking: Замаппить данные и найти займы:\n- Поиск по userId = mrmacgood71\n- Фильтрация по статусу (ACTIVE, RETURNED)\n- Сортировка по дате выдачи (desc)\n- Применение пагинации

alt Займы не найдены
    Booking --> Gateway: 204 No Content
    Gateway --> User: 204 No Content - Нет займов
else Займы найдены
    == Обогащение данными о книгах ==
    loop Для каждого займа
        Booking -> BMS: Получить детальную информацию о книге
        activate BMS
        BMS -> BMS: Получить данные книги:\n- Основная информация\n- Авторы и издатель\n- Текущая доступность
        BMS --> Booking: BookDetails с актуальной информацией
        deactivate BMS
        
        Booking -> Booking: Обогатить займ данными:\n- Добавить информацию о книге\n- Рассчитать дни до возврата\n- Определить статус просрочки\n- Вычислить сумму штрафа (если есть)
    end
    
    == Анализ просроченных займов ==
    Booking -> Booking: Проверить и проанализировать просрочки:\n- Найти займы с due_date < current_date\n- Подсчитать общее количество просроченных\n- Рассчитать общую сумму штрафов\n- Определить критичность просрочек
    
    Booking -> Booking: Подготовить метаданные ответа:\n- Статистика по займам\n- Информация о просрочках\n- Рекомендации пользователю
    
    Booking --> Gateway: 200 OK - Список займов с полной информацией
    deactivate Booking
    
    Gateway --> User: 200 OK - Список полученных книг + статус просрочек
end

@enduml